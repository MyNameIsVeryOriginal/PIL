(*
   NOM: NGUYEN                 
   Prénom: Minh Kha                 
   L2 Info Groupe 2                 
                    *)

                                DM Principe d'Interprétation des Langages

ex1

1/

5 | -4.45 | 46E56 | -4.42E3

2/

Si cette modification est prise en compte, on ne sera pas capable de reconnaître les chiffres excepté 0.


3/


    E,e     +,-         0
0 -----> 1 ------> 2 -------> 3 ==>
                   |
                   |        |-| 0,1,2,3,4,5,6,7,8,9
                   |        | v      
                   |-------> 4 ==>
            1,2,3,4,
            5,6,7,8,9


"
|-|
| V  " représentation d'une boucle 


4/

Le texte << }26"blab["-1.5,true >> possède le mot "true" reconnait par le programme 
ligne " true {return TRUE;} " qui retourne donc true avec aucune erreur.

Le texte << 6.25e-26{trois} >> possède "{trois}" qui n'est pas reconnu par le programme
et qui renvoit donc l'erreur sur le premier caractère non reconnaissable.

5/

MEMBERLIST est une grammaire récursive, toutes ses règles revient sur elle même.
MEMBERLIST_OPT porte MEMBERLIST ou vide. Donc MEMBERLIST_OPT reconnait l'espace vide.
MEMBERLIST_OPT peut être nul alors que MEMBERLIST ne peut être nul.

6/

a)
    O_BEGIN
    |
    |- O_END 

Cette suite ne pose pas problème car MEMBERLIST_OPT est vide et donc ne renvoit pas d'erreur.

b)
    O_BEGIN
    |
    |-NAME
    |   |- COLON
    |   |- NUMBER
    |   |- COMMA
    |
    |-NAME
    |   |- COLON
    |   |- OTHER_STRING
    |   |- COMMA
    |
    |-NAME
    |   |- COLON
    |   |- O_BEGIN
    |       |- NAME
    |       |    |- COLON
    |       |    |- TRUE
    |       |- O_END
    |
    |- O_END    

Cette suite ne pose pas de problème, elle respecte bien les règles imposées par les grammaires définies.

c)

    O_BEGIN
    |
    |- NAME
    |   |- COLON
    |       
    |- NAME
    |   |- COMMA      <<- Erreur de syntaxe
    |   |- NUMBER
    |   |- COLON
    |   |- OTHER_STRING
    |
    |- O_END

Dans cet suite, MEMBER doit commencer par NAME suivi d'un COLON alors qu'ici, est suivi par COMMA.
Cette suite viole la règle de MEMBER.

Ex2

1) Les tables Premier et Suivant de G 

Premier()   |   Initialisation  |  Itération 1  |   Itération2  |  Itération3   |
S           |                   |               |     a,b,c     |               |  
A           |       ε           |       a       |               |               |
B           |                   |      b,c      |               |               |
C           |       ε           |       c       |               |               |


Suivant()   |   Initialisation  |   Itération 1 |   Itération2  |   Itération3  |
S           |                   |       $       |               |               |
A           |                   |     b,c,$     |               |               |
B           |                   |    c,$,a,b    |               |               |
C           |                   |       $       |               |               |

on a en conclusion 

            |     Premier()     |   Suivant()   |   
S           |       a,b,c       |       $       |
A           |        ε,a        |     b,c,$     |
B           |        b,c        |    c,$,a,d    |  
C           |        ε,c        |       $       |

2) La table d'analyse LL(1) de G


LL(1)       |       a       |       b       |       c       |       $       |
S           |    S -> ABC   |    S -> ABC   |    S -> ABC   |               | 
A           |    A -> a     |               |               |     A -> ε    |    
B           |               |    B -> bBab  |    B -> c     |               |
C           |               |               |    C -> cA    |     C -> ε    |

3)

acc : S -> ABC tel que 
A -> a ; B -> c ; C -> cA , A -> ε


Pour annalyser bbcabab on va la décomposer de la manière suivante 
bbcabab : S -> ABC tel que

εbbcababε avec A -> ε et C -> ε

B -> b bcaba b qui est la forme bBAb de B 

on a donc: 
BA -> bcaba
B -> bcab
A -> a 

B-> bcab qui est la forme bBAb de B 
BA -> ca 
B -> c 
A -> a 
